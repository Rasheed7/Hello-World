#include <iostream>

using namespace std;

int sx, sy, fx, fy;        
int row, col;              
int maze[1000][1000];       
int visit[1000][1000];      
int state = 0;            
int dir[4][2] = {{1,0}, {-1,0}, {0,-1}, {0,1}}; 

int legal(int x, int y)

{
    if(x >= 0 && x < row && y >= 0 && y < col && maze[x][y] == 0 && visit[x][y] == 0)

        return 1;

    else

        return 0;

}

void dfs(int x, int y)

{

    if(x == fx && y == fy)

    {
        state = 1;
        return;
    }
    visit[x][y] = 1;               
    for(int i = 0; i < 4; i ++)
    {

        int nx = x+dir[i][0];       

        int ny = y+dir[i][1];

        if(legal(nx, ny))          
            dfs(nx, ny);

    }

}

int main()

{

    cin >> row >> col;

    cin >> sx >> sy;

    cin >> fx >> fy;

    for(int i = 0; i < row; i++)

        for(int j = 0; j < col; j++)

            cin >> maze[i][j];

    dfs(sx, sy);

    if(state == 1)

        cout << "Yes" << endl;

    else

        cout << "No" << endl;

    return 0;

}
